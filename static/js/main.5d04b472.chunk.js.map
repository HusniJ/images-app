{"version":3,"sources":["logo.svg","components/UserSelection.js","components/SelectedImage.js","components/SelectImages.js","components/ShowImages.js","App.js","reportWebVitals.js","index.js"],"names":["UserSelection","setUserId","userId","useState","users","setUsers","userName","setUserName","dropdownOpen","setDropdownOpen","isLoading","setIsLoading","modal","setModal","newUserId","setNewUserId","newName","setNewName","toggle","useEffect","axios","get","then","data","catch","error","toast","finally","selectUser","event","target","name","value","Spinner","color","className","length","Dropdown","isOpen","prev","DropdownToggle","caret","DropdownMenu","map","user","index","DropdownItem","onClick","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","row","Label","for","sm","Col","Input","type","id","placeholder","onChange","e","ModalFooter","trim","post","response","success","message","Checkmark","selected","style","left","top","position","zIndex","display","fill","width","height","cx","cy","r","d","imgStyle","transition","selectedImgStyle","transform","cont","backgroundColor","cursor","overflow","SelectedImage","photo","margin","direction","toggleImageSelection","isSelected","setIsSelected","sx","sy","alt","title","console","log","SelectImages","setUserImages","userImages","clearUserId","defaultImages","setDefaultImages","selectedIndex","setSelectedIndex","isImageExists","setIsImageExists","images","imagePaths","item","push","src","fetchUserImages","entries","entry","picture","fetchDefaultImages","imageRenderer","useCallback","key","filter","selectedImages","updatedImages","i","put","photos","renderImage","ShowImages","clearImages","App","logo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaults","baseURL","process","headers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d04b472.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n    Dropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    Spinner,\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Form,\r\n    Label,\r\n    Input,\r\n    FormGroup,\r\n    Col\r\n} from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst UserSelection = ({ setUserId, userId }) => {\r\n    const [users, setUsers] = useState([]);\r\n    const [userName, setUserName] = useState('Select Users');\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modal, setModal] = useState(false);\r\n    const [newUserId, setNewUserId] = useState('');\r\n    const [newName, setNewName] = useState('');\r\n\r\n    const toggle = () => setModal(!modal);\r\n    const toggleDropDown = () => setDropdownOpen(prev => !prev);\r\n\r\n    const fetchData = () => {\r\n        setIsLoading(true);\r\n        axios.get(\"/user/all\")\r\n            .then((users) => { setUsers(users.data) })\r\n            .catch(error => { toast.error(error) })\r\n            .finally(() => { setIsLoading(false) });\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [])\r\n\r\n    const selectUser = (event) => {\r\n        setUserName(event.target.name);\r\n        setUserId(event.target.value);\r\n    }\r\n\r\n    const saveUser = () => {\r\n        if (newUserId === '' || newUserId.trim().length === 0) {\r\n            toast.error('Invalid User Id');\r\n            return;\r\n        }\r\n\r\n        if (newName === '' || newName.trim().length === 0) {\r\n            toast.error('Invalid User Name');\r\n            return;\r\n        }\r\n        setIsLoading(true);\r\n        axios.post(\"/user/insert\", {\r\n            userId: newUserId,\r\n            name: newName\r\n        }).then((response) => {\r\n            toast.success('Saved Successfully');\r\n            setUsers(prev => [...prev, response.data])\r\n            toggle();\r\n        }).catch((error) => {toast.error(error?.message)})\r\n        .finally(() => { setIsLoading(false); })\r\n    }\r\n\r\n    if (userId !== null) return ''\r\n\r\n    return (\r\n        <div>\r\n            {isLoading ?\r\n                <Spinner color=\"primary\" /> :\r\n                <div className=\"User-Div\">\r\n                    <div>\r\n                        {users.length > 0 && <Dropdown isOpen={dropdownOpen} toggle={toggleDropDown}>\r\n                            <DropdownToggle caret>\r\n                                {userName}\r\n                            </DropdownToggle>\r\n                            <DropdownMenu>\r\n                                {\r\n                                    users.map((user, index) => {\r\n                                        return (<DropdownItem value={user.userId} name={user.name} key={index} onClick={selectUser}>{user.name}</DropdownItem>);\r\n                                    })\r\n                                }\r\n                            </DropdownMenu>\r\n                        </Dropdown>}\r\n                    </div>\r\n                    &nbsp;\r\n                    <div>\r\n                        <Button color=\"secondary\" onClick={toggle}>Create User</Button>\r\n                        <Modal isOpen={modal} toggle={toggle}>\r\n                            <ModalHeader toggle={toggle}>Modal title</ModalHeader>\r\n                            <ModalBody>\r\n                                {\r\n                                    <Form>\r\n                                        <FormGroup row>\r\n                                            <Label for=\"userId\" sm={2}>User Id</Label>\r\n                                            <Col sm={10}>\r\n                                                <Input type=\"text\" name=\"userId\" id=\"userId\" placeholder=\"enter user id\" onChange={(e) => setNewUserId(`${e.target.value}`)} />\r\n                                            </Col>\r\n                                        </FormGroup>\r\n                                        <FormGroup row>\r\n                                            <Label for=\"userName\" sm={2}>Name</Label>\r\n                                            <Col sm={10}>\r\n                                                <Input type=\"text\" name=\"userId\" id=\"userName\" placeholder=\"enter name\" onChange={(e) => setNewName(`${e.target.value}`)} />\r\n                                            </Col>\r\n                                        </FormGroup>\r\n                                    </Form>\r\n                                }\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <Button color=\"primary\" onClick={saveUser}>Save</Button>{' '}\r\n                                <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n                            </ModalFooter>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserSelection;","import React, { useState, useEffect } from \"react\";\r\n\r\nconst Checkmark = ({ selected }) => (\r\n  <div\r\n    style={\r\n      selected\r\n        ? { left: \"4px\", top: \"4px\", position: \"absolute\", zIndex: \"1\" }\r\n        : { display: \"none\" }\r\n    }\r\n  >\r\n    <svg\r\n      style={{ fill: \"white\", position: \"absolute\" }}\r\n      width=\"24px\"\r\n      height=\"24px\"\r\n    >\r\n      <circle cx=\"12.5\" cy=\"12.2\" r=\"8.292\" />\r\n    </svg>\r\n    <svg\r\n      style={{ fill: \"#06befa\", position: \"absolute\" }}\r\n      width=\"24px\"\r\n      height=\"24px\"\r\n    >\r\n      <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\" />\r\n    </svg>\r\n  </div>\r\n);\r\n\r\nconst imgStyle = {\r\n  transition: \"transform .135s cubic-bezier(0.0,0.0,0.2,1),opacity linear .15s\"\r\n};\r\nconst selectedImgStyle = {\r\n  transform: \"translateZ(0px) scale3d(0.9, 0.9, 1)\",\r\n  transition: \"transform .135s cubic-bezier(0.0,0.0,0.2,1),opacity linear .15s\"\r\n};\r\nconst cont = {\r\n  backgroundColor: \"#eee\",\r\n  cursor: \"pointer\",\r\n  overflow: \"hidden\",\r\n  position: \"relative\"\r\n};\r\n\r\nconst SelectedImage = ({\r\n  index,\r\n  photo,\r\n  margin,\r\n  direction,\r\n  top,\r\n  left,\r\n  selected,\r\n  toggleImageSelection\r\n}) => {\r\n  const [isSelected, setIsSelected] = useState(selected);\r\n  //calculate x,y scale\r\n  const sx = (100 - (30 / photo.width) * 100) / 100;\r\n  const sy = (100 - (30 / photo.height) * 100) / 100;\r\n  selectedImgStyle.transform = `translateZ(0px) scale3d(${sx}, ${sy}, 1)`;\r\n\r\n  if (direction === \"column\") {\r\n    cont.position = \"absolute\";\r\n    cont.left = left;\r\n    cont.top = top;\r\n  }\r\n\r\n  const handleOnClick = e => {\r\n    setIsSelected(!isSelected);\r\n    console.log('selected', index);\r\n    toggleImageSelection(!isSelected, index);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsSelected(selected);\r\n  }, [selected]);\r\n\r\n  return (\r\n    <div\r\n      style={{ margin, height: photo.height, width: photo.width, ...cont }}\r\n      className={!isSelected ? \"not-selected\" : \"\"}\r\n    >\r\n      <Checkmark selected={isSelected ? true : false} />\r\n      <img\r\n        alt={photo.title}\r\n        style={\r\n          isSelected ? { ...imgStyle, ...selectedImgStyle } : { ...imgStyle }\r\n        }\r\n        {...photo}\r\n        onClick={handleOnClick}\r\n      />\r\n      <style>{`.not-selected:hover{outline:2px solid #06befa}`}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectedImage;\r\n","import axios from \"axios\";\r\nimport { useEffect, useState, useCallback } from \"react\";\r\nimport { toast } from 'react-toastify';\r\nimport { Spinner, Button } from 'reactstrap';\r\nimport Gallery from 'react-photo-gallery';\r\nimport SelectedImage from './SelectedImage'\r\n\r\nconst SelectImages = ({ userId, setUserImages, userImages, clearUserId }) => {\r\n    // const [selectAll, setSelectAll] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [defaultImages, setDefaultImages] = useState([]);\r\n    const [selectedIndex, setSelectedIndex] = useState([]);\r\n    const [isImageExists, setIsImageExists] = useState(false);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (userId === null) return;\r\n\r\n        // fetch User Images\r\n        const fetchUserImages = () => {\r\n            setIsLoading(true);\r\n            let images = [];\r\n            axios.get(`user/images/find/${userId}`)\r\n                .then((response) => {\r\n                    if (response?.data?.imagePaths?.length > 0) {\r\n                        response.data.imagePaths.map(item => {\r\n                            images.push({\r\n                                src: item,\r\n                                width: 1,\r\n                                height: 1\r\n                            });\r\n                            return item;\r\n                        })\r\n                    }\r\n                    setUserImages(images);\r\n                    setIsImageExists(images.length > 0);\r\n                })\r\n                .catch((error) => {\r\n                    toast.error(error.message)\r\n                }).finally(() => {\r\n                    setIsLoading(false);\r\n                });\r\n        }\r\n\r\n        fetchUserImages();\r\n    }, [userId])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (userImages.length !== 0) {\r\n            return;\r\n        }\r\n\r\n        // fetch Default Images to set for the User\r\n        const fetchDefaultImages = () => {\r\n            if (userId === null) return;\r\n            const images = [];\r\n            setIsLoading(true);\r\n            axios.get(\"https://dev-pb-apps.s3-eu-west-1.amazonaws.com/collection/CHhASmTpKjaHyAsSaauThRqMMjWanYkQ.json\")\r\n                .then((response) => {\r\n                    response.data?.entries.map(entry => {\r\n                        images.push({\r\n                            src: entry.picture,\r\n                            width: 1,\r\n                            height: 1\r\n                        });\r\n                        return entry;\r\n                    })\r\n                    setDefaultImages(images);\r\n                })\r\n                .catch((error) => {\r\n                    toast.error(error.message)\r\n                }).finally(() => {\r\n                    setIsLoading(false);\r\n                });\r\n        }\r\n\r\n        fetchDefaultImages();\r\n    }, [userImages])\r\n\r\n    const imageRenderer = useCallback(\r\n        ({ index, left, top, key, photo }) => (\r\n            <SelectedImage\r\n                selected={false}\r\n                key={key}\r\n                margin={\"2px\"}\r\n                index={index}\r\n                photo={photo}\r\n                left={left}\r\n                top={top}\r\n                toggleImageSelection={toggleImageSelection}\r\n            />\r\n        ),\r\n        []\r\n    );\r\n\r\n    const toggleImageSelection = (isSelected, index) => {\r\n        if (isSelected) {\r\n            setSelectedIndex(prev => [...prev, index]);\r\n            return;\r\n        }\r\n        setSelectedIndex(prev => prev.filter((e) => (e !== index)));\r\n    }\r\n\r\n    const saveImages = () => {\r\n        if (selectedIndex.length === 0) {\r\n            toast.error('Please Select Images');\r\n            return;\r\n        }\r\n\r\n        if (selectedIndex.length !== 9) {\r\n            toast.error('Please Select only 9 Images');\r\n            return;\r\n        }\r\n\r\n        const selectedImages = [];\r\n        const updatedImages = [];\r\n        selectedIndex.map(i => {\r\n            selectedImages.push(defaultImages[i].src);\r\n            updatedImages.push({\r\n                src: defaultImages[i].src,\r\n                width: 1,\r\n                height: 1\r\n            });\r\n            return i;\r\n        })\r\n\r\n        setIsLoading(true);\r\n        if (!isImageExists) {\r\n            axios.post(\"/user/images/insert\", {\r\n                userId: userId,\r\n                imagePaths: selectedImages\r\n            }).then(() => {\r\n                toast.success(\"Successfully Saved\");\r\n                setSelectedIndex([]);\r\n            }).catch((error) => {\r\n                toast.error(error.message);\r\n            }).finally(() => {\r\n                setIsLoading(false);\r\n            });\r\n        } else {\r\n            axios.put(\"/user/images/update\", {\r\n                userId: userId,\r\n                imagePaths: selectedImages\r\n            }).then(() => {\r\n                toast.success(\"Successfully Updated\");\r\n                setSelectedIndex([]);\r\n            }).catch((error) => {\r\n                toast.error(error.message);\r\n            }).finally(() => {\r\n                setIsLoading(false);\r\n            });\r\n        }\r\n        setUserImages(updatedImages);\r\n    }\r\n\r\n    if (userId === null) return '';\r\n    if (userImages.length !== 0) return '';\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                isLoading ? <Spinner color=\"primary\" /> :\r\n                    <div>\r\n                        <div>\r\n                            <Button color=\"primary\" onClick={saveImages}>Save Images</Button>\r\n                            {' '}\r\n                            <Button color=\"primary\" onClick={clearUserId}>Change User</Button>\r\n                        </div>\r\n                        <div className=\"Image-gallery-container\">\r\n                            <Gallery photos={defaultImages} renderImage={imageRenderer} />\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SelectImages;","import { Button } from \"reactstrap\";\r\nimport Gallery from \"react-photo-gallery\";\r\n\r\nconst ShowImages = ({ userId, userImages, clearImages, clearUserId }) => {\r\n    if (userId === null) return '';\r\n    if (userImages.length === 0) return '';\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Button color=\"primary\" onClick={() => clearImages()}>Update Images</Button>\r\n                {' '}\r\n                <Button color=\"primary\"onClick={() => clearUserId()}>Change User</Button>\r\n            </div>\r\n            { userImages.length > 0 &&\r\n                <div className=\"Image-gallery-container\">\r\n                    <Gallery photos={userImages} />\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowImages;","\r\nimport { useState } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport UserSelection from './components/UserSelection';\r\nimport SelectImages from './components/SelectImages';\r\nimport ShowImages from './components/ShowImages';\r\n\r\nconst App = () => {\r\n  const [userId, setUserId] = useState(null);\r\n  const [userImages, setUserImages] = useState([]);\r\n\r\n  const clearImages = () => {\r\n    setUserImages([]);\r\n  }\r\n\r\n  const clearUserId = () => {\r\n    setUserImages([]);\r\n    setUserId(null);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <ToastContainer />\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <h1>Image Book</h1>\r\n        <UserSelection setUserId={setUserId} userId={userId} />\r\n        <SelectImages userId={userId} setUserImages={setUserImages} userImages={userImages} clearUserId={clearUserId} />\r\n        <ShowImages userId={userId} userImages={userImages} clearImages={clearImages} clearUserId={clearUserId} />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_BASE_URL;\r\naxios.defaults.headers.post['Content-Type'] = 'application/json';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}